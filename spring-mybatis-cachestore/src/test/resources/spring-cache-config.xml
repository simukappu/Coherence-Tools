<?xml version="1.0"?>
<cache-config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.oracle.com/coherence/coherence-cache-config"
	xmlns:spring="class://com.oracle.coherence.spring.SpringNamespaceHandler"
	xsi:schemaLocation="http://xmlns.oracle.com/coherence/coherence-cache-config coherence-cache-config.xsd
              class://com.oracle.coherence.spring.SpringNamespaceHandler coherence-spring-config.xsd">

	<spring:bean-factory>
		<spring:application-context-uri>META-INF/spring/cachestore-context.xml
		</spring:application-context-uri>
	</spring:bean-factory>

	<defaults>
		<serializer system-property="tangosol.coherence.serializer" />
		<socket-provider system-property="tangosol.coherence.socketprovider" />
	</defaults>

	<caching-scheme-mapping>
		<cache-mapping>
			<cache-name>SpringMyBatisCacheStoreCache</cache-name>
			<scheme-name>SpringMyBatisCacheStoreCache-service-scheme
			</scheme-name>
		</cache-mapping>
		<cache-mapping>
			<cache-name>SpringMyBatisCacheStoreWriteOnlyCache</cache-name>
			<scheme-name>SpringMyBatisCacheStoreWriteOnlyCache-service-scheme
			</scheme-name>
		</cache-mapping>
		<cache-mapping>
			<cache-name>SpringMyBatisCacheStoreWriteOnceOnlyCache</cache-name>
			<scheme-name>SpringMyBatisCacheStoreWriteOnceOnlyCache-service-scheme
			</scheme-name>
		</cache-mapping>
		<cache-mapping>
			<cache-name>SpringMyBatisCacheStoreReadOnlyCache</cache-name>
			<scheme-name>SpringMyBatisCacheStoreReadOnlyCache-service-scheme
			</scheme-name>
		</cache-mapping>
		<cache-mapping>
			<cache-name>SpringMyBatisCacheStoreWithChildEntitiesCache
			</cache-name>
			<scheme-name>SpringMyBatisCacheStoreWithChildEntitiesCache-service-scheme
			</scheme-name>
		</cache-mapping>
		<cache-mapping>
			<cache-name>SpringMyBatisCacheStoreWithChildEntitiesWriteOnceOnlyCache
			</cache-name>
			<scheme-name>SpringMyBatisCacheStoreWithChildEntitiesWriteOnceOnlyCache-service-scheme
			</scheme-name>
		</cache-mapping>

		<cache-mapping>
			<cache-name>SpringMyBatisCacheStoreWriteBehindCache</cache-name>
			<scheme-name>SpringMyBatisCacheStoreWriteBehindCache-service-scheme
			</scheme-name>
		</cache-mapping>
		<cache-mapping>
			<cache-name>SpringMyBatisCacheStoreWriteOnlyWriteBehindCache</cache-name>
			<scheme-name>SpringMyBatisCacheStoreWriteOnlyWriteBehindCache-service-scheme
			</scheme-name>
		</cache-mapping>
		<cache-mapping>
			<cache-name>SpringMyBatisCacheStoreWriteOnceOnlyWriteBehindCache</cache-name>
			<scheme-name>SpringMyBatisCacheStoreWriteOnceOnlyWriteBehindCache-service-scheme
			</scheme-name>
		</cache-mapping>
		<cache-mapping>
			<cache-name>SpringMyBatisCacheStoreReadOnlyWriteBehindCache</cache-name>
			<scheme-name>SpringMyBatisCacheStoreReadOnlyWriteBehindCache-service-scheme
			</scheme-name>
		</cache-mapping>
		<cache-mapping>
			<cache-name>SpringMyBatisCacheStoreWithChildEntitiesWriteBehindCache
			</cache-name>
			<scheme-name>SpringMyBatisCacheStoreWithChildEntitiesWriteBehindCache-service-scheme
			</scheme-name>
		</cache-mapping>
		<cache-mapping>
			<cache-name>SpringMyBatisCacheStoreWithChildEntitiesWriteOnceOnlyWriteBehindCache
			</cache-name>
			<scheme-name>SpringMyBatisCacheStoreWithChildEntitiesWriteOnceOnlyWriteBehindCache-service-scheme
			</scheme-name>
		</cache-mapping>
	</caching-scheme-mapping>

	<caching-schemes>
		<distributed-scheme>
			<scheme-name>SpringMyBatisCacheStoreCache-service-scheme
			</scheme-name>
			<service-name>SpringMyBatisCacheStoreCache-service</service-name>
			<backing-map-scheme>
				<read-write-backing-map-scheme>
					<internal-cache-scheme>
						<local-scheme />
					</internal-cache-scheme>
					<cachestore-scheme>
						<class-scheme>
							<spring:bean>
								<spring:bean-name>SpringMyBatisCacheStore
								</spring:bean-name>
							</spring:bean>
						</class-scheme>
					</cachestore-scheme>
				</read-write-backing-map-scheme>
			</backing-map-scheme>
			<autostart>true</autostart>
		</distributed-scheme>
		<distributed-scheme>
			<scheme-name>SpringMyBatisCacheStoreWriteOnlyCache-service-scheme
			</scheme-name>
			<service-name>SpringMyBatisCacheStoreWriteOnlyCache-service
			</service-name>
			<backing-map-scheme>
				<read-write-backing-map-scheme>
					<internal-cache-scheme>
						<local-scheme />
					</internal-cache-scheme>
					<cachestore-scheme>
						<class-scheme>
							<spring:bean>
								<spring:bean-name>SpringMyBatisCacheStoreWriteOnly
								</spring:bean-name>
							</spring:bean>
						</class-scheme>
					</cachestore-scheme>
				</read-write-backing-map-scheme>
			</backing-map-scheme>
			<autostart>true</autostart>
		</distributed-scheme>
		<distributed-scheme>
			<scheme-name>SpringMyBatisCacheStoreWriteOnceOnlyCache-service-scheme
			</scheme-name>
			<service-name>SpringMyBatisCacheStoreWriteOnceOnlyCache-service
			</service-name>
			<backing-map-scheme>
				<read-write-backing-map-scheme>
					<internal-cache-scheme>
						<local-scheme />
					</internal-cache-scheme>
					<cachestore-scheme>
						<class-scheme>
							<spring:bean>
								<spring:bean-name>SpringMyBatisCacheStoreWriteOnceOnly
								</spring:bean-name>
							</spring:bean>
						</class-scheme>
					</cachestore-scheme>
				</read-write-backing-map-scheme>
			</backing-map-scheme>
			<autostart>true</autostart>
		</distributed-scheme>
		<distributed-scheme>
			<scheme-name>SpringMyBatisCacheStoreReadOnlyCache-service-scheme
			</scheme-name>
			<service-name>SpringMyBatisCacheStoreReadOnlyCache-service
			</service-name>
			<backing-map-scheme>
				<read-write-backing-map-scheme>
					<internal-cache-scheme>
						<local-scheme />
					</internal-cache-scheme>
					<cachestore-scheme>
						<class-scheme>
							<spring:bean>
								<spring:bean-name>SpringMyBatisCacheStoreReadOnly
								</spring:bean-name>
							</spring:bean>
						</class-scheme>
					</cachestore-scheme>
				</read-write-backing-map-scheme>
			</backing-map-scheme>
			<autostart>true</autostart>
		</distributed-scheme>
		<distributed-scheme>
			<scheme-name>SpringMyBatisCacheStoreWithChildEntitiesCache-service-scheme
			</scheme-name>
			<service-name>SpringMyBatisCacheStoreWithChildEntitiesCache-service
			</service-name>
			<backing-map-scheme>
				<read-write-backing-map-scheme>
					<internal-cache-scheme>
						<local-scheme />
					</internal-cache-scheme>
					<cachestore-scheme>
						<class-scheme>
							<spring:bean>
								<spring:bean-name>SpringMyBatisCacheStoreWithChildEntities
								</spring:bean-name>
							</spring:bean>
						</class-scheme>
					</cachestore-scheme>
				</read-write-backing-map-scheme>
			</backing-map-scheme>
			<autostart>true</autostart>
		</distributed-scheme>
		<distributed-scheme>
			<scheme-name>SpringMyBatisCacheStoreWithChildEntitiesWriteOnceOnlyCache-service-scheme
			</scheme-name>
			<service-name>SpringMyBatisCacheStoreWithChildEntitiesWriteOnceOnlyCache-service
			</service-name>
			<backing-map-scheme>
				<read-write-backing-map-scheme>
					<internal-cache-scheme>
						<local-scheme />
					</internal-cache-scheme>
					<cachestore-scheme>
						<class-scheme>
							<spring:bean>
								<spring:bean-name>SpringMyBatisCacheStoreWithChildEntitiesWriteOnceOnly
								</spring:bean-name>
							</spring:bean>
						</class-scheme>
					</cachestore-scheme>
				</read-write-backing-map-scheme>
			</backing-map-scheme>
			<autostart>true</autostart>
		</distributed-scheme>

		<distributed-scheme>
			<scheme-name>SpringMyBatisCacheStoreWriteBehindCache-service-scheme
			</scheme-name>
			<service-name>SpringMyBatisCacheStoreWriteBehindCache-service</service-name>
			<backing-map-scheme>
				<read-write-backing-map-scheme>
					<internal-cache-scheme>
						<local-scheme />
					</internal-cache-scheme>
					<cachestore-scheme>
						<class-scheme>
							<spring:bean>
								<spring:bean-name>SpringMyBatisCacheStore
								</spring:bean-name>
							</spring:bean>
						</class-scheme>
					</cachestore-scheme>
					<write-delay>1s</write-delay>
					<write-batch-factor>1.0</write-batch-factor>
				</read-write-backing-map-scheme>
			</backing-map-scheme>
			<autostart>true</autostart>
		</distributed-scheme>
		<distributed-scheme>
			<scheme-name>SpringMyBatisCacheStoreWriteOnlyWriteBehindCache-service-scheme
			</scheme-name>
			<service-name>SpringMyBatisCacheStoreWriteOnlyWriteBehindCache-service
			</service-name>
			<backing-map-scheme>
				<read-write-backing-map-scheme>
					<internal-cache-scheme>
						<local-scheme />
					</internal-cache-scheme>
					<cachestore-scheme>
						<class-scheme>
							<spring:bean>
								<spring:bean-name>SpringMyBatisCacheStoreWriteOnly
								</spring:bean-name>
							</spring:bean>
						</class-scheme>
					</cachestore-scheme>
					<write-delay>1s</write-delay>
					<write-batch-factor>1.0</write-batch-factor>
				</read-write-backing-map-scheme>
			</backing-map-scheme>
			<autostart>true</autostart>
		</distributed-scheme>
		<distributed-scheme>
			<scheme-name>SpringMyBatisCacheStoreWriteOnceOnlyWriteBehindCache-service-scheme
			</scheme-name>
			<service-name>SpringMyBatisCacheStoreWriteOnceOnlyWriteBehindCache-service
			</service-name>
			<backing-map-scheme>
				<read-write-backing-map-scheme>
					<internal-cache-scheme>
						<local-scheme />
					</internal-cache-scheme>
					<cachestore-scheme>
						<class-scheme>
							<spring:bean>
								<spring:bean-name>SpringMyBatisCacheStoreWriteOnceOnly
								</spring:bean-name>
							</spring:bean>
						</class-scheme>
					</cachestore-scheme>
					<write-delay>1s</write-delay>
					<write-batch-factor>1.0</write-batch-factor>
				</read-write-backing-map-scheme>
			</backing-map-scheme>
			<autostart>true</autostart>
		</distributed-scheme>
		<distributed-scheme>
			<scheme-name>SpringMyBatisCacheStoreReadOnlyWriteBehindCache-service-scheme
			</scheme-name>
			<service-name>SpringMyBatisCacheStoreReadOnlyWriteBehindCache-service
			</service-name>
			<backing-map-scheme>
				<read-write-backing-map-scheme>
					<internal-cache-scheme>
						<local-scheme />
					</internal-cache-scheme>
					<cachestore-scheme>
						<class-scheme>
							<spring:bean>
								<spring:bean-name>SpringMyBatisCacheStoreReadOnly
								</spring:bean-name>
							</spring:bean>
						</class-scheme>
					</cachestore-scheme>
					<write-delay>1s</write-delay>
					<write-batch-factor>1.0</write-batch-factor>
				</read-write-backing-map-scheme>
			</backing-map-scheme>
			<autostart>true</autostart>
		</distributed-scheme>
		<distributed-scheme>
			<scheme-name>SpringMyBatisCacheStoreWithChildEntitiesWriteBehindCache-service-scheme
			</scheme-name>
			<service-name>SpringMyBatisCacheStoreWithChildEntitiesWriteBehindCache-service
			</service-name>
			<backing-map-scheme>
				<read-write-backing-map-scheme>
					<internal-cache-scheme>
						<local-scheme />
					</internal-cache-scheme>
					<cachestore-scheme>
						<class-scheme>
							<spring:bean>
								<spring:bean-name>SpringMyBatisCacheStoreWithChildEntities
								</spring:bean-name>
							</spring:bean>
						</class-scheme>
					</cachestore-scheme>
					<write-delay>1s</write-delay>
					<write-batch-factor>1.0</write-batch-factor>
				</read-write-backing-map-scheme>
			</backing-map-scheme>
			<autostart>true</autostart>
		</distributed-scheme>
		<distributed-scheme>
			<scheme-name>SpringMyBatisCacheStoreWithChildEntitiesWriteOnceOnlyWriteBehindCache-service-scheme
			</scheme-name>
			<service-name>SpringMyBatisCacheStoreWithChildEntitiesWriteOnceOnlyWriteBehindCache-service
			</service-name>
			<backing-map-scheme>
				<read-write-backing-map-scheme>
					<internal-cache-scheme>
						<local-scheme />
					</internal-cache-scheme>
					<cachestore-scheme>
						<class-scheme>
							<spring:bean>
								<spring:bean-name>SpringMyBatisCacheStoreWithChildEntitiesWriteOnceOnly
								</spring:bean-name>
							</spring:bean>
						</class-scheme>
					</cachestore-scheme>
					<write-delay>1s</write-delay>
					<write-batch-factor>1.0</write-batch-factor>
				</read-write-backing-map-scheme>
			</backing-map-scheme>
			<autostart>true</autostart>
		</distributed-scheme>
	</caching-schemes>

</cache-config>
